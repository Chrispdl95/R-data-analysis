library(tidyverse)
dict_url <- "https://raw.githubusercontent.com/edwindj/datacleaning/master/data/dirty_iris.csv"
if (!file.exists('dirty_iris.csv'))download.file(dict_url,'dirty_iris.csv')
data <- read_csv('dirty_iris.csv')
View(data)
data
str(data)
is.factor(data)
data <- read_csv('dirty_iris.csv', stringsAsFactors=FALSE)
data <- read_csv('dirty_iris.csv')
data
str(data)
is.factor(data)
class(data)
dict_url <- "https://raw.githubusercontent.com/edwindj/datacleaning/master/data/dirty_iris.csv"
if (!file.exists('dirty_iris.csv'))download.file(dict_url,'dirty_iris.csv')
data <- read_csv(file='dirty_iris.csv',stringsAsFactors=FALSE)
data <- read_csv(file='dirty_iris.csv')
data
str(data)
is.factor(data)
class(data)
complete.cases(data)
sum(complete.cases(data), na.rm = TRUE)
data_na=apply(X = is.na(data), MARGIN = 1, FUN = sum)
data_na_sum <- sum(data_na != 0)
data_na_sum
nrow(data)
perc_compl_obser= (nrow(data)-data_na_sum)/nrow(data)
perc_compl_obser
96/150
nrow(data)
if (is.numeric(x)) !is.finite(x) else is.na(x)
data[sapply(data, is.special)== TRUE]
is.special <- function(x){
if (is.numeric(x)) !is.finite(x) else is.na(x)
}
data[sapply(data, is.special)== TRUE]
data[sapply(data, is.special)== TRUE]<- NA
library(editrules)
E <- editfile('rules1.txt')
View(E)
ve <- violatedEdits(E,data)
summary(ve)
plot(ve)
erros <- summary(ve)
View(erros)
errors <- summary(ve)
no_errors <- errors%>%
filter(errors=0)%>%
summarize(count=freq)
no_errors <- errors%>%
filter(errors=0)%>%
summarize(count=freq)
no_errors <- errors%>%
filter(errors==0)%>%
summarize(count=freq)
View(no_errors)
no_errors
as.numeric(no_errors)
View(no_errors)
as.integer(no_errors)
View(no_errors)
no_errors<-as.integer(no_errors)
percentage_of_no_errors <- no_errors/nrow(data)
View(errors)
df_ve <- as.data.frame.table(ve)
View(df_ve)
colnames(df_ve) <- c('record','constraint','type')
View(E)
summary(ve)
long_petals<- df_ve %>%
filter(constraint == 'num6',type== TRUE)%>%
summarise(record)
long_petals
boxplot.stats(data['Sepal.Length'])$out
boxplot.stats(data['Sepal.Length'])$out
boxplot.stats(data['Sepal.Length'])$out
boxplot(data['Sepal.Length'],ylab='Sepal Length',notch=TRUE, varwidth= TRUE, main='Sepal length Boxplot')
data$Sepal.Length[data$Sepal.Length==boxplot.stats(data['Sepal.Length'])$out] <-mean(data$Petal.Length,na.rm=TRUE)
boxplot.stats(data['Sepal.Length'])$out
data$Sepal.Length[data$Sepal.Length %in% boxplot.stats(data['Sepal.Length'])$out] <-mean(data$Petal.Length,na.rm=TRUE)
boxplot.stats(data['Sepal.Length'])$out
boxplot.stats(data['Sepal.Length'])$out
boxplot(data['Sepal.Length'],ylab='Sepal Length',notch=TRUE, varwidth= TRUE, main='Sepal length Boxplot')
data$Sepal.Length[data$Sepal.Length %in% boxplot.stats(data['Sepal.Length'])$out] <-mean(data$Petal.Length,na.rm=TRUE)
boxplot.stats(data['Sepal.Length'])$out
rules <- correctionRules(expression(if (Petal.Width < 0) Petal.Width <-NA))
rules <- correctionRules(expression(if (Petal.Width < 0) Petal.Width <-NA)
x<-correctWithRules(rules,data)
rules <- correctionRules(expression(if (Petal.Width < 0) Petal.Width <-NA)
data <- x$corrected
rules <- correctionRules(expression(if (is.na(Petal.Width)) Petal.Width<- NA
else if(Petal.Width < 0) Petal.Width <-NA))
rules <- correctionRules(expression(if (is.na(Petal.Width)) Petal.Width<- NA
else if(Petal.Width < 0) Petal.Width <-NA))
library(deducorrect)
rules <- correctionRules(expression(if (is.na(Petal.Width)) Petal.Width<- NA
else if(Petal.Width < 0) Petal.Width <-NA))
x<-correctWithRules(rules,data)
x<-correctWithRules(rules,data)
data <- x$corrected
le <-  localizeErrors(E, data)
View(le)
le <-  localizeErrors(E, data,method='mip')
le$adapt
data[le==TRUE] <- NA
data[le$adapt==TRUE] <- NA
data_KNN <- kNN(data)%>%
select(1:5)
data_KNN <- kNN(data)
library(VIM)
data_KNN <- kNN(data)
View(data_KNN)
View(data)
data_KNN <- kNN(data)%>%
select(1:5)
data_hot1 <- hotdeck(data=data, variable= 'Petal.Width', ord_var= 'Species')
View(data_hot1)
data_hot1 <- hotdeck(data=data, variable= 'Petal.Width', ord_var= 'Species')%>%
select(1:5)
colnames(compare_hot1_knn) <- c('Variable','Diff_in_row','hotdeck_imput','knn_imput')
compare_hot1_knn <-diffdf(data_hot1, data_KNN)$VarDiff_Petal.Width
library(diffdf)
compare_hot1_knn <-diffdf(data_hot1, data_KNN)$VarDiff_Petal.Width
compare_hot1_knn <-diffdf(data_hot1, data_KNN)
View(compare_hot1_knn)
compare_hot1_knn <-diffdf(data_hot1, data_KNN)$VarDiff_Sepal.Length
View(compare_hot1_knn)
colnames(compare_hot1_knn) <- c('Variable','Diff_in_row','hotdeck_imput','knn_imput')
compare_hot1_knn<- compare_hot1_knn%>%
mutate(abs_diff= abs(knn_imput - hotdeck_imput))
library(dplyr)
library(tibble)
library(tidyr)
library(ggplot2)
library(forcats)
set.seed(5702)
mycars <- mtcars
View(mycars)
mycars[,"gear"] <- NA
mycars[10:20, 3:5] <- NA
View(mycars)
colSums(is.na(mycars)) %>%
sort(decreasing = TRUE)
tidycars <- mycars %>%
rownames_to_column("id") %>%
gather(key, value, -id) %>%
mutate(missing = ifelse(is.na(value), "yes", "no"))
View(tidycars)
ggplot(tidycars, aes(x = key, y = fct_rev(id), fill = missing)) +
geom_tile(color = "white") +
ggtitle("mtcars with NAs added") +
ylab('') +
scale_fill_viridis_d() + # discrete scale
theme_bw()
ggplot(tidycars, aes(x = key, y = fct_rev(id), fill = missing)) +
geom_tile(color = "white") +
ggtitle("mtcars with NAs added") +
ylab('') +
theme_bw()
ggplot(tidycars, aes(x = key, y = fct_rev(id), fill = missing)) +
geom_tile(color = "white") +
ggtitle("mtcars with NAs added") +
ylab('') +
scale_fill_viridis_d() + # discrete scale
theme_bw()
ggplot(tidycars, aes(x = key, y = fct_rev(id), fill = missing)) +
geom_tile(color = "white") +
ggtitle("mtcars with NAs added") +
ylab('yy') +
scale_fill_viridis_d() + # discrete scale
theme_bw()
ggplot(tidycars, aes(x = key, y = fct_rev(id), fill = missing)) +
geom_tile(color = "white") +
ggtitle("mtcars with NAs added") +
ylab('') +
scale_fill_viridis_d() + # discrete scale
theme_bw()
ggplot(tidycars, aes(x = key, y = fct_rev(id), fill = missing)) +
geom_tile(color = "white") +
ggtitle("mtcars with NAs added") +
scale_fill_viridis_d() + # discrete scale
theme_bw()
ylab('') +
ggplot(tidycars, aes(x = key, y = fct_rev(id), fill = missing)) +
geom_tile(color = "white") +
ggtitle("mtcars with NAs added") +
ylab('') +
scale_fill_viridis_d() + # discrete scale
theme_bw()
ggplot(tidycars, aes(x = key, y = fct_rev(id), fill = missing)) +
geom_tile(color = "white") +
ggtitle("mtcars with NAs added") +
ylab('') +
scale_fill_viridis_d() + # discrete scale
theme_bw()
f <- factor(c("a", "b", "c"))
fct_rev(f)
tidycars <- tidycars %>% group_by(key) %>%
mutate(Std = (value-mean(value, na.rm = TRUE))/sd(value, na.rm = TRUE)) %>% ungroup()
View(tidycars)
ggplot(tidycars, aes(x = key, y = fct_rev(id), fill = Std)) +
geom_tile(color = "white") +
ylab('') +
scale_fill_gradient2(low = "blue", mid = "white", high ="yellow", na.value = "black") + theme_bw()
# convert missing to numeric so it can be summed up
tidycars <- tidycars %>%
mutate(missing2 = ifelse(missing == "yes", 1, 0))
ggplot(tidycars, aes(x = fct_reorder(key, -missing2, sum), y = fct_reorder(id, -missing2, sum), fill = Std)) +
geom_tile(color = "white") +
ylab('') +
scale_fill_gradient2(low = "blue", mid = "white", high ="yellow", na.value = "black") + theme_bw()
library(redav)
plot_missing(mycars, percent = FALSE)
install.packages("redav")
plot_missing(mycars, percent = FALSE)
library(redav)
plot_missing(mycars, percent = FALSE)
library(tidyverse)
ggplot(diamonds, aes(y=carat)) +
geom_boxplot(color="black", fill="lightblue") +
ggtitle("Ouliers on carat variable in diamonds dataset")
diamonds
diamonds <- diamonds
iris <- iris
View(iris)
## Types of Outliers
### Univariate Outliers
ggplot(iris, aes(x=Species, y=Sepal.Width)) +
geom_boxplot(color="black", fill="lightblue") +
ggtitle("Boxplot for Sepal Width grouped by Species in iris dataset")
ggplot(iris, aes(y=Sepal.Width)) +
geom_boxplot(color="black", fill="lightblue") +
ggtitle("Boxplot for Sepal Width in iris dataset")
### Multivariate Outliers
ggplot(iris, aes(x=Sepal.Width, y=Petal.Length)) +
geom_point() +
ggtitle("Scatterplot for Petal Length vs Sepal Width in iris dataset")
ggplot(iris, aes(x=Petal.Width, y=Petal.Length)) +
geom_point() +
geom_smooth() +
geom_density2d(col="red",bins=4) +
ggtitle("Scatterplot for Petal Length vs Petal Width in iris dataset")
ggplot(iris, aes(x=Petal.Width, y=Petal.Length)) +
geom_point() +
geom_smooth() +
#geom_density2d(col="red",bins=4) +
ggtitle("Scatterplot for Petal Length vs Petal Width in iris dataset")
ggplot(iris, aes(x=Petal.Width, y=Petal.Length)) +
geom_point() +
geom_smooth() +
geom_density2d(col="red",bins=4) +
ggtitle("Scatterplot for Petal Length vs Petal Width in iris dataset")
ggplot(iris, aes(x=Petal.Width, y=Petal.Length)) +
geom_point() +
geom_smooth() +
#geom_density2d(col="red",bins=4) +
ggtitle("Scatterplot for Petal Length vs Petal Width in iris dataset")
ggplot(iris, aes(x=Petal.Width, y=Petal.Length)) +
geom_point() +
#geom_smooth() +
#geom_density2d(col="red",bins=4) +
ggtitle("Scatterplot for Petal Length vs Petal Width in iris dataset")
ggplot(iris, aes(x=Petal.Width, y=Petal.Length)) +
geom_point() +
geom_smooth() +
#geom_density2d(col="red",bins=4) +
ggtitle("Scatterplot for Petal Length vs Petal Width in iris dataset")
ggplot(iris, aes(x=Petal.Width, y=Petal.Length)) +
geom_point() +
geom_smooth() +
geom_density2d(col="red",bins=4) +
ggtitle("Scatterplot for Petal Length vs Petal Width in iris dataset")
library(GGally)
ggparcoord(diamonds[1:100,], columns=1:5, scale="uniminmax", alpha=0.8) +
ggtitle("Parallel coordinate plot of diamonds dataset")
View(diamonds)
ggparcoord(diamonds, columns=1:7, scale="uniminmax", alpha=0.8) +
ggtitle("Parallel coordinate plot of diamonds dataset")
ggparcoord(diamonds[1:100,], columns=1:5, scale="uniminmax", alpha=0.8) +
ggtitle("Parallel coordinate plot of diamonds dataset")
ggparcoord(diamonds[1:1000,], columns=1:5, scale="uniminmax", alpha=0.8) +
ggtitle("Parallel coordinate plot of diamonds dataset")
ggparcoord(diamonds[1:100,], columns=1:5, scale="uniminmax", alpha=0.8) +
ggtitle("Parallel coordinate plot of diamonds dataset")
ggparcoord(diamonds[1:100,], columns=1:7, scale="uniminmax", alpha=0.8) +
ggtitle("Parallel coordinate plot of diamonds dataset")
ggparcoord(diamonds[1:100,], columns=c(1,5), scale="uniminmax", alpha=0.8) +
ggtitle("Parallel coordinate plot of diamonds dataset")
ggparcoord(diamonds[1:100,], columns=c(1,5), scale="uniminmax", alpha=0.8) +
ggtitle("Parallel coordinate plot of diamonds dataset")
ggparcoord(diamonds[1:100,], columns=1:5, scale="uniminmax", alpha=0.8) +
ggtitle("Parallel coordinate plot of diamonds dataset")
### Categorical Outliers
library(datasets)
library(extracat)
fluctile(HairEyeColor)
ggplot(diamonds, aes(y=y)) +
geom_boxplot(color="black", fill="#9B3535") +
ggtitle("Ouliers on width variable in diamonds dataset")
ggplot(diamonds, aes(y=z)) +
geom_boxplot(color="black", fill="#9B3535") +
ggtitle("Ouliers on depth variable in diamonds dataset")
ggplot(diamonds, aes(y, z)) +
geom_point(col = "#9B3535") +
xlab("width") +
ylab("depth")
ggplot(diamonds, aes(y=y)) +
geom_boxplot(color="black", fill="#9B3535") +
ggtitle("Ouliers on width variable in diamonds dataset")
ggplot(diamonds, aes(y=z)) +
geom_boxplot(color="black", fill="#9B3535") +
ggtitle("Ouliers on depth variable in diamonds dataset")
ggplot(diamonds, aes(y, z)) +
geom_point(col = "#9B3535") +
xlab("width") +
ylab("depth")
### More informative
d2 <- filter(diamonds, y > 2 & y < 11 & z > 1 & z < 8)
ggplot(d2, aes(y=y)) +
geom_boxplot(color="black", fill="lightblue") +
ggtitle("Ouliers on width variable in diamonds dataset")
d2 <- filter(diamonds, y > 2 & y < 11 & z > 1 & z < 8)
ggplot(d2, aes(y=z)) +
geom_boxplot(color="black", fill="lightblue") +
ggtitle("Ouliers on depth variable in diamonds dataset")
d2 <- filter(diamonds, y > 2 & y < 11 & z > 1 & z < 8)
ggplot(d2, aes(y, z)) +
geom_point(shape = 21, color = "Brown", fill = "Blue", stroke = 0.1) +
xlab("width") +
ylab("depth")
ggplot(iris, aes(x=Petal.Width, y=Petal.Length)) +
geom_point() +
geom_smooth() +
geom_density2d(col="red",bins=4) +
ggtitle("Scatterplot for Petal Length vs Petal Width in iris dataset")
### Multivariate Outliers
ggplot(iris, aes(x=Sepal.Width, y=Petal.Length)) +
geom_point() +
ggtitle("Scatterplot for Petal Length vs Sepal Width in iris dataset")
### Multivariate Outliers
ggplot(iris, aes(x=Sepal.Width, y=Petal.Length)) +
geom_point() +
ggtitle("Scatterplot for Petal Length vs Sepal Width in iris dataset")
ggplot(iris, aes(x=Petal.Width, y=Petal.Length)) +
geom_point() +
geom_smooth() +
geom_density2d(col="red",bins=4) +
ggtitle("Scatterplot for Petal Length vs Petal Width in iris dataset")
ggplot(iris, aes(x=Petal.Width, y=Petal.Length)) +
geom_point() +
geom_smooth() +
geom_density2d(col="red",bins=10) +
ggtitle("Scatterplot for Petal Length vs Petal Width in iris dataset")
### Multivariate Outliers
ggplot(iris, aes(x=Sepal.Width, y=Petal.Length)) +
geom_point() +
ggtitle("Scatterplot for Petal Length vs Sepal Width in iris dataset")
ggplot(iris, aes(x=Petal.Width, y=Petal.Length)) +
geom_point() +
geom_smooth() +
ggtitle("Scatterplot for Petal Length vs Petal Width in iris dataset")
geom_density2d(col="red",bins=10) +
ggplot(iris, aes(x=Petal.Width, y=Petal.Length)) +
geom_point() +
geom_smooth() +
geom_density2d(col="red",bins=10) +
ggtitle("Scatterplot for Petal Length vs Petal Width in iris dataset")
ggplot(iris, aes(x=Petal.Width, y=Petal.Length)) +
geom_point() +
geom_smooth() +
geom_density2d(col="red",bins=10) +
ggtitle("Scatterplot for Petal Length vs Petal Width in iris dataset")
